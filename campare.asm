; Підпрограма для порівняння двох рядків
compare_strings:
    push si             ; зберегти регістр SI
    push di             ; зберегти регістр DI
    
    mov si, ax          ; завантажити адресу першого рядка у SI
    mov di, bx          ; завантажити адресу другого рядка у DI
    
compare_loop:
    mov al, [si]        ; завантажити символ з першого рядка у AL
    mov ah, [di]        ; завантажити символ з другого рядка у AH
    cmp al, ah          ; порівняти символи
    jne end_compare     ; якщо символи не рівні, завершити порівняння
    cmp al, 0           ; перевірити, чи досягнуто кінця рядків
    je strings_equal    ; якщо так, рядки рівні
    
    inc si              ; перейти до наступного символу першого рядка
    inc di              ; перейти до наступного символу другого рядка
    jmp compare_loop   ; повторити порівняння
    
strings_equal:
    xor ax, ax          ; обнулити регістр AX (результат порівняння, рядки рівні)
    jmp end_compare     ; завершити порівняння
    
end_compare:
    pop di              ; відновити регістр DI
    pop si              ; відновити регістр SI
    ret                 ; повернення з підпрограми
