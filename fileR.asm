.model small
.stack 100h

.data
buffer db 255 dup (?)         ; Буфер для зберігання зчитаних символів
filename db "test.in", 0      ; Ім'я файлу, що зчитується

.code
main:
    ; Відкриття файлу для читання
    mov ah, 3Dh          ; DOS функція для відкриття файлу
    mov al, 00h            ; AL = 0 (режим читання)
    lea dx, filename     ; Завантаження адреси імені файлу
    mov cx, 01h
    int 21h              ; Виклик DOS

    jc open_failed       ; Якщо флаг переносу встановлено, перейти до open_failed

    mov bx, ax           ; BX = дескриптор файлу

    ; Читання з файлу
read_loop:
    mov ah, 3Fh          ; DOS функція для читання з файлу
    mov cx, 255          ; Максимальна кількість байтів для читання
    lea dx, buffer       ; Завантаження адреси буфера
    int 21h              ; Виклик DOS

    jnc read_success     ; Якщо переносу немає, перейти до read_success

    ; Якщо флаг переносу встановлено, перевірити, чи кінець файлу
    cmp ax, 0            ; AX містить кількість байтів, що було прочитано
    je read_success      ; Якщо AX = 0, досягнуто кінець файлу

    ; Обробка помилки читання
    ; Тут ви можете додати код обробки помилок

read_success:
    ; Виведення зчитаного буфера в консоль
    mov ah, 9            ; DOS функція для виводу рядка
    lea dx, buffer       ; Завантаження адреси буфера
    int 21h              ; Виклик DOS

    ; Продовжувати читання до кінця файлу
    jmp read_loop

open_failed:
    ; Обробка помилки відкриття файлу
    ; Тут ви можете додати код обробки помилок

    ; Вихід з програми
    mov ah, 4Ch          ; DOS функція для завершення програми
    int 21h              ; Виклик DOS

end main
